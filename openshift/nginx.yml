---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    name: nginx
spec:
  type: NodePort
  selector:
    name: nginx
  ports:
    - port: 80
      targetPort: 8080
      name: http
    - port: 8443
      targetPort: 8443
      name: https-admin
---
apiVersion: v1
kind: Route
metadata:
  name: openwhisk
  labels:
    name: nginx
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: nginx
    weight: 100
  wildcardPolicy: None
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
data:
  nginx.conf: |
    worker_rlimit_nofile 4096;

    events {
        worker_connections  4096;
    }

    http {
        client_max_body_size 50M;

        rewrite_log on;
        log_format combined-upstream '$remote_addr - $remote_user [$time_local] '
            '$request $status $body_bytes_sent '
            '$http_referer $http_user_agent $upstream_addr';
        access_log /logs/nginx_access.log combined-upstream;

        server {
            listen 8080 default;

            # match namespace, note while OpenWhisk allows a richer character set for a
            # namespace, not all those characters are permitted in the (sub)domain name;
            # if namespace does not match, no vanity URL rewriting takes place.
            server_name ~^(?<namespace>[0-9a-zA-Z-]+)\.localhost$;

            # proxy to the web action path
            location / {
                if ($namespace) {
                  rewrite    /(.*) /api/v1/web/${namespace}/$1 break;
                }
                proxy_pass http://controller:8080;
                proxy_read_timeout 75s; # 70+5 additional seconds to allow controller to terminate request
            }

            # proxy to 'public/html' web action by convention
            location = / {
                if ($namespace) {
                  rewrite    ^ /api/v1/web/${namespace}/public/index.html break;
                }
                proxy_pass http://controller:8080;
                proxy_read_timeout 75s; # 70+5 additional seconds to allow controller to terminate request
            }

            location /blackbox.tar.gz {
                return 301 https://github.com/apache/incubator-openwhisk-runtime-docker/releases/download/sdk%400.1.0/blackbox-0.1.0.tar.gz;
            }
            # leaving this for a while for clients out there to update to the new endpoint
            location /blackbox-0.1.0.tar.gz {
                return 301 /blackbox.tar.gz;
            }

            location /OpenWhiskIOSStarterApp.zip {
                return 301 https://github.com/openwhisk/openwhisk-client-swift/releases/download/0.2.3/starterapp-0.2.3.zip;
            }

            # redirect requests for specific binaries to the matching one from the latest openwhisk-cli release.
            location /cli/go/download/linux/amd64 {
                return 301 https://github.com/apache/incubator-openwhisk-cli/releases/download/latest/OpenWhisk_CLI-latest-linux-amd64.tgz;
            }
            location /cli/go/download/linux/386 {
                return 301 https://github.com/apache/incubator-openwhisk-cli/releases/download/latest/OpenWhisk_CLI-latest-linux-386.tgz;
            }
            location /cli/go/download/mac/amd64 {
                return 301 https://github.com/apache/incubator-openwhisk-cli/releases/download/latest/OpenWhisk_CLI-latest-mac-amd64.zip;
            }
            location /cli/go/download/mac/386 {
                return 301 https://github.com/apache/incubator-openwhisk-cli/releases/download/latest/OpenWhisk_CLI-latest-mac-386.zip;
            }
            location /cli/go/download/windows/amd64 {
                return 301 https://github.com/apache/incubator-openwhisk-cli/releases/download/latest/OpenWhisk_CLI-latest-windows-amd64.zip;
            }
            location /cli/go/download/windows/386 {
                return 301 https://github.com/apache/incubator-openwhisk-cli/releases/download/latest/OpenWhisk_CLI-latest-windows-386.zip;
            }

            # redirect top-level cli downloads to the latest openwhisk-cli release.
            location /cli/go/download {
                return 301 https://github.com/apache/incubator-openwhisk-cli/releases/latest;
             }
        }
    }
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx
  labels:
    name: nginx
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: nginx
    spec:
      restartPolicy: Always
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx
      - name: logs
        emptyDir: {}
      containers:
      - name: nginx
        imagePullPolicy: IfNotPresent
        image: projectodd/whisk_nginx:openshift-latest
        ports:
        - name: http
          containerPort: 8080
        - name: https-admin
          containerPort: 8443
        volumeMounts:
        - name: nginx-conf
          mountPath: "/etc/nginx/nginx.conf"
          subPath: "nginx.conf"
        - name: logs
          mountPath: "/logs"
      initContainers:
      - name: wait-for-controller
        image: busybox
        command: ['sh', '-c', 'until wget -T 5 --spider http://controller:8080/ping; do echo waiting for controller; sleep 2; done;']

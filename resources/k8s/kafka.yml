---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    name: kafka
spec:
  selector:
    name: kafka
  ports:
    - port: 9092
      targetPort: 9092
      name: kafka
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka
data:
  init: |
    source /openwhisk_config/env
    exec start-kafka.sh
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kafka
  labels:
    name: kafka
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: kafka
    spec:
      restartPolicy: Always
      volumes:
      - name: kafka-logs
        emptyDir: {}
      - name: kafka-java-logs
        emptyDir: {}
      - name: openwhisk-config
        configMap:
          name: openwhisk-config
      - name: kafka-config
        configMap:
          name: kafka
      containers:
      - name: kafka
        imagePullPolicy: IfNotPresent
        image: projectodd/whisk_kafka:openshift-latest
        command: ["/bin/bash", "-o", "allexport", "/kafka_config/init" ]
        ports:
        - name: kafka
          containerPort: 9092
        env:
        # - name: "KAFKA_BROKER_ID"
        #   value: "0"
        # - name: "KAFKA_ADVERTISED_HOST_NAME"
        #   value: "$(KAFKA_SERVICE_HOST)"
        # - name: "KAFKA_ADVERTISED_PORT"
        #   value: "$(KAFKA_SERVICE_PORT_KAFKA)"
        # - name: "KAFKA_HOST_NAME"
        #   valueFrom:
        #     fieldRef:
        #       fieldPath: status.podIP
        # - name: "KAFKA_PORT"
        #   value: "$(KAFKA_SERVICE_PORT_KAFKA)"

        # zookeeper info
        - name: "KAFKA_ZOOKEEPER_CONNECT"
          value: "$(ZOOKEEPER_SERVICE_HOST):$(ZOOKEEPER_SERVICE_PORT_ZOOKEEPER)"
        - name: "KAFKA_LOG_DIRS"
          value: "/data/logs"

        volumeMounts:
          - name: kafka-logs
            mountPath: "/data"
          - name: kafka-java-logs
            mountPath: "/logs"
          - name: openwhisk-config
            mountPath: "/openwhisk_config"
          - name: kafka-config
            mountPath: "/kafka_config"
